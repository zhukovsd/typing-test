# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    docker:
      # - image: circleci/openjdk:8-jdk
      - image: zhukovsd/typing-test-build-env:latest

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

#      # Download and cache dependencies
#      - restore_cache:
#          keys:
#          - v1-dependencies-{{ checksum "pom.xml" }}
#          # fallback to using the latest cache if no exact match is found
#          - v1-dependencies-

      - run:
          #command: |
          #  echo Installing node and npm...
          #  curl -sL https://deb.nodesource.com/setup_9.x | sudo -E bash -
          #  sudo apt-get install nodejs
          #  sudo apt-get install npm

          #  mvn package --offline

          name: Build typing-test war
          command: |
            mv /frontend/node_modules ./frontend
            mvn package --offline

      - setup_remote_docker

      - run:
          name: Build and push typing-test Docker image
          command: |
            docker image build -t zhukovsd/typing-test:latest .
            docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
            docker image push zhukovsd/typing-test:latest

      - run:
          name: Deploy to production Swarm
          command: |
            openssl aes-256-cbc -d -in ./production-certs/ca.pem.enc -k $ENCRYPTION_KEY -out ca.pem
            openssl aes-256-cbc -d -in ./production-certs/cert.pem.enc -k $ENCRYPTION_KEY -out cert.pem
            openssl aes-256-cbc -d -in ./production-certs/key.pem.enc -k $ENCRYPTION_KEY -out key.pem

            docker --tlsverify --tlscacert=ca.pem --tlscert=cert.pem --tlskey=key.pem -H 88.99.12.213:2376 swarm deploy -c stack.yml typing-test

#      - save_cache:
#          paths:
#            - ~/.m2
#          key: v1-dependencies-{{ checksum "pom.xml" }}

      # run tests!
#      - run: mvn integration-test