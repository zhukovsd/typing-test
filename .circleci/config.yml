defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: zhukovsd/typing-test-build-env:latest

version: 2
jobs:
  build:
    <<: *defaults

    # working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      - run:
          name: Build typing-test war
          command: |
            sh ./frontend/inject-commit-data-into-index-pug.sh
            mv /frontend/node_modules ./frontend
            mvn package --offline

      - persist_to_workspace:
          root: .
          # Must be relative path from root
          paths:
            - Dockerfile
            - stack.template.yml
            - production-certs/*
            - target/*
            - ROOT.xml

  deploy:
    <<: *defaults

    steps:
      - attach_workspace:
          # Must be absolute path or relative path from working_directory
          at: .

      - setup_remote_docker

      - run:
          name: Build and push typing-test Docker image
          command: |
            export TYPING_TEST_IMAGE_TAG=$CIRCLE_BRANCH

            docker image build -t zhukovsd/typing-test:$TYPING_TEST_IMAGE_TAG .
            docker login -u $DOCKER_HUB_USER -p $DOCKER_HUB_PASSWORD
            docker image push zhukovsd/typing-test:$TYPING_TEST_IMAGE_TAG

      - run:
          name: Deploy to Docker Swarm
          command: |
            openssl aes-256-cbc -d -in production-certs/ca.pem.enc -k $ENCRYPTION_KEY -out ca.pem
            openssl aes-256-cbc -d -in production-certs/cert.pem.enc -k $ENCRYPTION_KEY -out cert.pem
            openssl aes-256-cbc -d -in production-certs/key.pem.enc -k $ENCRYPTION_KEY -out key.pem

            export TYPING_TEST_IMAGE_TAG=$CIRCLE_BRANCH
            envsubst < "stack.template.yml" > "stack.yml"

            docker --tlsverify --tlscacert=ca.pem --tlscert=cert.pem --tlskey=key.pem -H 88.99.12.213:2376 stack deploy -c stack.yml --with-registry-auth typing-test

workflows:
  version: 2
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: production